apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'


android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
        multiDexEnabled true
    }


    packagingOptions {
        exclude "LICENSE.txt"
        exclude "META-INF/NOTICE"
        exclude "META-INF/LICENSE"
        exclude "META-INF/services/javax.annotation.processing.Processor"
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable "InvalidPackage"  // Some libraries have issues with this
        disable "OldTargetApi"// Due to Robolectric that modifies the manifest when running tests
    }
}

repositories {
    mavenCentral()
}

dependencies {
    def dataDependencies = rootProject.ext.dataDependencies

    compile fileTree(dir: "libs", include: ["*.jar"])
    compile project(":domain")

    apt dataDependencies.daggerCompiler
    compile dataDependencies.androidAnnotations
    compile dataDependencies.dagger
    compile dataDependencies.gson
    compile dataDependencies.retroFit
    compile dataDependencies.rxJava
    compile dataDependencies.rxAndroid
    compile dataDependencies.retroFitConverter
    compile dataDependencies.adapterRxJava
    compile dataDependencies.jodaTimeAndroid
    compile dataDependencies.playServicesPlus
    compile dataDependencies.mapPlayServices
    compile dataDependencies.realm
  //  compile dataDependencies.crashlytics
    compile dataDependencies.apacheCommons

}